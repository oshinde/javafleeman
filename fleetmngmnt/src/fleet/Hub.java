package fleet;
// Generated 20 Jan, 2020 2:21:04 PM by Hibernate Tools 3.2.2.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Hub generated by hbm2java
 */
@Entity
@Table(name = "hub", catalog = "fleet_management")
public class Hub implements java.io.Serializable {

	private int hubid;
	//private City city;
	private String hubaddress;
	private String hubphoneno;
	private String airportcode;
	/*private Set<Carcategory> carcategories = new HashSet<Carcategory>(0);
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<Billing> billingsForPickuplocation = new HashSet<Billing>(0);
	private Set<Billing> billingsForDropofflocation = new HashSet<Billing>(0);
	private Set<Booking> bookingsForPickuploc = new HashSet<Booking>(0);
	private Set<Car> cars = new HashSet<Car>(0);
	private Set<Booking> bookingsForDropoffloc = new HashSet<Booking>(0);*/

	public Hub() {
	}

	public Hub(int hubid/*, City city*/) {
		this.hubid = hubid;
		/*this.city = city;*/
	}

	public Hub(int hubid/*, City city*/, String hubaddress, String hubphoneno, String airportcode,
			Set<Carcategory> carcategories, Set<Employee> employees, Set<Billing> billingsForPickuplocation,
			Set<Billing> billingsForDropofflocation, Set<Booking> bookingsForPickuploc, Set<Car> cars,
			Set<Booking> bookingsForDropoffloc) {
		this.hubid = hubid;
		/*this.city = city;*/
		this.hubaddress = hubaddress;
		this.hubphoneno = hubphoneno;
		this.airportcode = airportcode;
		/*this.carcategories = carcategories;
		this.employees = employees;
		this.billingsForPickuplocation = billingsForPickuplocation;
		this.billingsForDropofflocation = billingsForDropofflocation;
		this.bookingsForPickuploc = bookingsForPickuploc;
		this.cars = cars;
		this.bookingsForDropoffloc = bookingsForDropoffloc;*/
	}

	@Id

	@Column(name = "hubid", unique = true, nullable = false)
	public int getHubid() {
		return this.hubid;
	}

	public void setHubid(int hubid) {
		this.hubid = hubid;
	}

/*	@Transient
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "citycityid", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}*/

	@Column(name = "hubaddress", length = 256)
	public String getHubaddress() {
		return this.hubaddress;
	}

	public void setHubaddress(String hubaddress) {
		this.hubaddress = hubaddress;
	}

	@Column(name = "hubphoneno", length = 256)
	public String getHubphoneno() {
		return this.hubphoneno;
	}

	public void setHubphoneno(String hubphoneno) {
		this.hubphoneno = hubphoneno;
	}

	@Column(name = "airportcode", length = 256)
	public String getAirportcode() {
		return this.airportcode;
	}

	public void setAirportcode(String airportcode) {
		this.airportcode = airportcode;
	}

	/*@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hub")
	public Set<Carcategory> getCarcategories() {
		return this.carcategories;
	}

	public void setCarcategories(Set<Carcategory> carcategories) {
		this.carcategories = carcategories;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hub")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hubByPickuplocation")
	public Set<Billing> getBillingsForPickuplocation() {
		return this.billingsForPickuplocation;
	}

	public void setBillingsForPickuplocation(Set<Billing> billingsForPickuplocation) {
		this.billingsForPickuplocation = billingsForPickuplocation;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hubByDropofflocation")
	public Set<Billing> getBillingsForDropofflocation() {
		return this.billingsForDropofflocation;
	}

	public void setBillingsForDropofflocation(Set<Billing> billingsForDropofflocation) {
		this.billingsForDropofflocation = billingsForDropofflocation;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hubByPickuploc")
	public Set<Booking> getBookingsForPickuploc() {
		return this.bookingsForPickuploc;
	}

	public void setBookingsForPickuploc(Set<Booking> bookingsForPickuploc) {
		this.bookingsForPickuploc = bookingsForPickuploc;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hub")
	public Set<Car> getCars() {
		return this.cars;
	}

	public void setCars(Set<Car> cars) {
		this.cars = cars;
	}

	@Transient
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "hubByDropoffloc")
	public Set<Booking> getBookingsForDropoffloc() {
		return this.bookingsForDropoffloc;
	}

	public void setBookingsForDropoffloc(Set<Booking> bookingsForDropoffloc) {
		this.bookingsForDropoffloc = bookingsForDropoffloc;
	}*/

}
